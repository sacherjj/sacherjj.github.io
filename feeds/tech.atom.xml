<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>joesacher.com</title><link href="http://www.joesacher.com/" rel="alternate"></link><link href="http://www.joesacher.com/feeds/tech.atom.xml" rel="self"></link><id>http://www.joesacher.com/</id><updated>2012-04-09T00:00:00-04:00</updated><entry><title>The Windows Phone Experiment is Over</title><link href="http://www.joesacher.com/blog/tech/windows-phone-experiment-is-over/" rel="alternate"></link><updated>2012-04-09T00:00:00-04:00</updated><author><name>Joe Sacher</name></author><id>tag:www.joesacher.com,2012-04-09:blog/tech/windows-phone-experiment-is-over/</id><summary type="html">&lt;p&gt;My wife and I left webOS when &lt;span class="caps"&gt;HP&lt;/span&gt; flushed their 3 year plan to revamp webOS down the toilet. We tested both Android and Windows Phone. Android is a multitasking joke.
Coming from webOS, it has a terrible &lt;span class="caps"&gt;UI&lt;/span&gt;. Windows Phone has very nice flowing &lt;span class="caps"&gt;UI&lt;/span&gt;. We decided to go to Windows Phone.&lt;/p&gt;
&lt;p&gt;Microsoft representatives promised to get phones and development credits to webOS programmers. Despite many requests, it turned out to be a bunch of hot air.
Sadly, this turned me off to all mobile development.&lt;/p&gt;
&lt;p&gt;We slugged along with trying to make Windows Phone a viable mobile solution for 8 months. We are done trying. After two weeks of switching to Android, we know two things.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Android is painful to use, compared to the grace of webOS.&lt;/li&gt;
&lt;li&gt;Android is &lt;span class="caps"&gt;LESS&lt;/span&gt; painful than Windows Phone.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I enjoy podcasts. Trying to listen to them on Windows Phone is a complete nightmare. It is so bad that I stopped listening to podcasts completely.
It was one of the many things I slowly gave up, because of the lack of usability on Windows Phone.&lt;/p&gt;
&lt;p&gt;I have a decent collection of audio books on mp3 format. There is only one way that I could make these work on Windows Phone:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Join all mp3s in the right order into one mp3 file&lt;/li&gt;
&lt;li&gt;Change the metadata to indicate podcast genre&lt;/li&gt;
&lt;li&gt;Go through Zune to get it on my phone&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then if I want to listen to other things on the device, I get to lose my place.&lt;/p&gt;
&lt;p&gt;I used to subscribe to audio books on Audible. I stopped with webOS.
This keeps getting promised for Windows Phone. This exists for Android. Which brings us into another factor: apps.&lt;/p&gt;
&lt;p&gt;I dealt with the lack of apps, lack of access to hardware, lack of many things on webOS, because the &lt;span class="caps"&gt;UI&lt;/span&gt; is still the best out there.
Two weeks on Android with access to some of the things I have been missing, makes up for a lot of bad &lt;span class="caps"&gt;UI&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Zune slowly changed from something I have to work through to get stuff on my phone, to something that drove me completely nuts.
I setup WiFi sync, so that I didn’t have to constantly connect my phone to download podcasts and other things to it.
My Windows Phone almost never correctly download these things on its own. Oh, how many times I watched my phone indicate pending downloads that would never come to pass.
WiFi worked to finish the downloads when the software felt merciful and the moon was in the correct region of the sky.&lt;/p&gt;
&lt;p&gt;If I wanted an annoying piece of software that was the gatekeeper for my device, I would just deal with the abomination that is iTunes.&lt;/p&gt;
&lt;p&gt;File management is a joke. The process of getting a document on and off your phone involves crazy steps of using email, online syncs, and a bit of prayer.
I miss the former days of a &lt;span class="caps"&gt;USB&lt;/span&gt; drive mode, where I could just copy files. Guess what? That is back with Android.&lt;/p&gt;
&lt;p&gt;While Windows Phone has the same multi-task pausing of the iPhone, it was easier to switch between apps than Android. However, if the app isn’t setup with the Mango resume,
the pause before the app resumes is annoying. Really the two platforms are pretty much tied in this race. They both have barely left the starting blocks of usability, compared to webOS.&lt;/p&gt;
&lt;p&gt;I thought that the home screen of Android would be more annoying. It turns out to be less so than trying to fit all the apps you want to use on the start screen or looking them up each time in the alphabetical list.&lt;/p&gt;
&lt;p&gt;So, what do I have with Android now?&lt;/p&gt;
&lt;p&gt;Apps for my credit union, including deposit check via photo. Charging credit cards via a device on the headphone jack. Tethering via &lt;span class="caps"&gt;USB&lt;/span&gt; for free.
Not quite the WiFi hot spot that webOS gave me, but I can have that too if I decide to root the phone. Edit: Found FoxFi, so WiFi hot spot is back.&lt;/p&gt;
&lt;p&gt;A video player that plays files I just drop on the phone via &lt;span class="caps"&gt;USB&lt;/span&gt;. No waiting 30 minutes to convert the files into the correct format.&lt;/p&gt;
&lt;p&gt;Ambling Book Player that takes an audio book with 250 files and handles it perfectly.&lt;/p&gt;
&lt;p&gt;BeyondPod which, while not as nice as Dr. Podder on webOS, can actually manager all my podcasting needs on the device.&lt;/p&gt;
&lt;p&gt;Audible. I have missed Audible.&lt;/p&gt;
&lt;p&gt;ScummVM is now back on my phone. I was one of the backers for Double Fine’s Adventure game on Kickstarter. I enjoy these things. It was possible with webOS, and now is again.&lt;/p&gt;
&lt;p&gt;Things are far from perfect on my Android transition. I have to periodically hit the optimize button to close down rogue apps.
I had to get a 3500 mAh battery to make my phone last a day. But things are better.&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;P.S.&lt;/span&gt; I found out that Zune doesn’t want me to go. I cancelled our Zune Pass. Luckily, I had a card stolen and cancelled that card as well.
Now I get an email periodically about how the card is bad. How they can’t charge a monthly fee for a service I cancelled over 2 weeks ago. Zune, the relationship is over.  We broke up.&lt;/p&gt;
</summary><category term="mobile"></category><category term="windows phone"></category></entry><entry><title>Zune Podcasts - A Rant</title><link href="http://www.joesacher.com/blog/tech/zune-podcasts-a-rant/" rel="alternate"></link><updated>2011-09-21T00:00:00-04:00</updated><author><name>Joe Sacher</name></author><id>tag:www.joesacher.com,2011-09-21:blog/tech/zune-podcasts-a-rant/</id><summary type="html">&lt;p&gt;Zune podcast functionality on Windows Phone Mango was obviously designed by someone who never listens to podcasts.  I’ve tried to use it over the last three weeks and it is an exercise in futility.&lt;/p&gt;
&lt;p&gt;There is one glaring problems that needs to be addressed before it is close to usable.  It all comes down to episode management.  Unfortunately, this is the most important factor of any podcast solution.&lt;/p&gt;
&lt;p&gt;Order is allowed, for either oldest first or newest first.  This is great.  What this means is that it will constantly download the oldest or the newest.  Doesn’t matter how many times you have heard them.
It doesn’t matter if you manually marked them as heard and manually deleted them.&lt;/p&gt;
&lt;p&gt;If you have oldest selected, guess what is downloading back on the phone?  Do you remember those old favorites that you have manually deleted 10 times already?  Yeah, they’re back.&lt;/p&gt;
&lt;p&gt;Hello old friends.&lt;/p&gt;
&lt;p&gt;If you are caught up and always listen to the latest, the moment it comes out, then having the newest set and keeping the latest X on your devices works fine.
Myself, I set almost everything to oldest, because if 2 episodes come out before I get back to that podcast, I want to hear them in order.&lt;/p&gt;
&lt;p&gt;This isn’t that hard.  When a feed is added, a piece of data is tracked for each episode.  If you have downloaded and listened to a podcast, store the podcast filename or &lt;span class="caps"&gt;URL&lt;/span&gt; with a played flag.
When you are listing episodes, you put a small indicator that this is old and listened to already.  When syncing podcasts, download the oldest or newest that don’t have the listened to flag set.  Done.
This is programming, not rocket science.  The user can manually redownload them if wanted, but otherwise they are dead to us.&lt;/p&gt;
&lt;p&gt;Now that we have a database that remembers which are played, can we mark them as played without downloading them?  Pretty please?
Some podcasts were online before you were even a glint in your compiler’s linked binaries.  I’m at episode 140 of 200, but selecting oldest will only allow me to start at 1.
Even if episodes were marked as listened correctly, I would have to download and mark all 139 prior episodes.&lt;/p&gt;
&lt;p&gt;Now, can we ask for another great feature?  Add an auto delete after listening option.  Wouldn’t that be great?  You listen to an episode.  It is marked as played in the &lt;span class="caps"&gt;DB&lt;/span&gt; and deleted.  Now what happens?
The next episode is automatically downloaded to get up to your keep at least number.  It would be almost like the software was reading my mind.&lt;/p&gt;
&lt;p&gt;I’ve almost stopped listening to PodCasts on Windows Phone, because the management of episodes is more work than the enjoyment of listening to them.
Maybe it is too easy to spot really crappy software after using really great software.   If anyone wants to see really good software, look at drPodder on webOS.
It is open source, take a look.  It makes Zune’s implementation looks like a bad student programming project.&lt;/p&gt;
</summary><category term="podcasts"></category><category term="mobile"></category><category term="windows phone"></category></entry><entry><title>Thermostat Wiring</title><link href="http://www.joesacher.com/blog/tech/thermostat-wiring/" rel="alternate"></link><updated>2011-09-08T00:00:00-04:00</updated><author><name>Joe Sacher</name></author><id>tag:www.joesacher.com,2011-09-08:blog/tech/thermostat-wiring/</id><summary type="html">&lt;p&gt;I have delusions of possibly making an embedded thermostat solution that tracks energy usage, inside and outside temperature and humidity and possibly online weather forecasts for setting house temperature.
For this to work, I need to fully understand thermostat wiring.  It took a bit of looking around the net to identify thermostat wire colors, thermostat terminals and functions, so I thought I would summarize it in a post.&lt;/p&gt;
&lt;p&gt;All signals are 24 &lt;span class="caps"&gt;VAC&lt;/span&gt; controlled&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="13%"&gt;&lt;/col&gt;
&lt;col width="48%"&gt;&lt;/col&gt;
&lt;col width="39%"&gt;&lt;/col&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Label Code&lt;/th&gt;
&lt;th class="head"&gt;Function&lt;/th&gt;
&lt;th class="head"&gt;Wire Color&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;R&lt;/td&gt;
&lt;td&gt;Power (24 &lt;span class="caps"&gt;VAC&lt;/span&gt;)&lt;/td&gt;
&lt;td&gt;Red&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span class="caps"&gt;RC&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;Power for Cooling&lt;/td&gt;
&lt;td&gt;Red&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span class="caps"&gt;RH&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;Power for Heating
(&lt;span class="caps"&gt;RC&lt;/span&gt; and &lt;span class="caps"&gt;RH&lt;/span&gt; may be jumped together)&lt;/td&gt;
&lt;td&gt;Red&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Cooling Power to Compressor Relay&lt;/td&gt;
&lt;td&gt;Yellow&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Y2&lt;/td&gt;
&lt;td&gt;2nd Stage Cooling Power&lt;/td&gt;
&lt;td&gt;Varies (Lgt. Blue)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;W&lt;/td&gt;
&lt;td&gt;Heating (Gas, Oil, or Electric)&lt;/td&gt;
&lt;td&gt;White&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;G&lt;/td&gt;
&lt;td&gt;Indoor Blower Fan&lt;/td&gt;
&lt;td&gt;Green&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;Common for &lt;span class="caps"&gt;24VAC&lt;/span&gt; Transformer&lt;/td&gt;
&lt;td&gt;Black&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;O/B&lt;/td&gt;
&lt;td&gt;Reversing Value for Heat Pump&lt;/td&gt;
&lt;td&gt;Varies&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;O&lt;/td&gt;
&lt;td&gt;Energised in Cooling Mode&lt;/td&gt;
&lt;td&gt;Orange&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;Energised in Heating Mode&lt;/td&gt;
&lt;td&gt;Dark Blue or Blue (Rheem/Ruud)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;E&lt;/td&gt;
&lt;td&gt;Emergency Heat&lt;/td&gt;
&lt;td&gt;Varies&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;X/Aux&lt;/td&gt;
&lt;td&gt;Back up for Heat Pump or Aux Heating&lt;/td&gt;
&lt;td&gt;Varies&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;S1-S2&lt;/td&gt;
&lt;td&gt;Shielded Outside Air Temp. Sensor&lt;/td&gt;
&lt;td&gt;Varies&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</summary><category term="projects"></category><category term="hvac"></category></entry><entry><title>Android vs Windows Phone Navigation</title><link href="http://www.joesacher.com/blog/tech/android-vs-windows-phone-navigation/" rel="alternate"></link><updated>2011-09-07T00:00:00-04:00</updated><author><name>Joe Sacher</name></author><id>tag:www.joesacher.com,2011-09-07:blog/tech/android-vs-windows-phone-navigation/</id><summary type="html">&lt;p&gt;I’m testing both Android and Windows Phone on Sprint.  Both devices have free TeleNav service on Sprint, so the service using that application is roughly similar.  Both phones also come with stock turn by turn directions.
Android is a no holds barred knockout win.&lt;/p&gt;
&lt;p&gt;The turn by turn directions in pre-Mango Windows Phone is a joke.  You must tap the screen to move along, making it totally unusable for navigation when you are driving the car.  The Mango update provides considerably increased driving instructions.
If you follow the route given, the system works very well.  If you do not, you will soon want to through your phone out your car window.&lt;/p&gt;
&lt;p&gt;I have used each phone’s direction solution to “find” my way to work.  Due to heavy construction, the fastest route is not obvious.  This is a good way of figuring out how annoying &lt;span class="caps"&gt;GPS&lt;/span&gt; software will be, by driving in a manner that it considers idiotic.&lt;/p&gt;
&lt;p&gt;My first day was with Android 2.3.5.  I started Navigation, tapped Speak Navigation, and rattled off my work address.  It parsed the address correctly.  I deviated from the proposed route no less than ten times.
When I went off route, the phone didn’t utter a peep, it just recalculated a route faster than any mapping solution I have ever used.  Voice prompts were there when needed, but not annoying at all.
After determining that the routing works as well as TeleNav, this would be my preferred navigation solution on Android.  TeleNav give you a speak destination option, but it does not parse the speech to text as well as Navigate.
If you want to use TeleNav for the routing, you can let Navigate hear your location then select which you wish to use for &lt;span class="caps"&gt;GPS&lt;/span&gt; routing.&lt;/p&gt;
&lt;p&gt;My second day was with Windows Phone 7.5 beta.  I started Maps and tapped the directions arrow, then typed in my work address.  Then I started navigating.  No voice destination is available in Maps or TeleNav.
The routing looks fine.  Now I go off route.  My phone tells me that I have gone off track and I can tap the screen to reroute.  Excuse me?  I have to tap the screen to reroute?
Whoever came up with this idea is the same guy who puts 2 “Are you &lt;span class="caps"&gt;SURE&lt;/span&gt; you want to close this App?” dialogs, when you just want to get out of the program.
So I held the phone in my hand, because I knew I would have to tap the screen after each mile or so leg, when it thinks I should get “back on track”.&lt;/p&gt;
&lt;p&gt;I wound up turning off Maps about halfway to work, to keep me from throwing the phone out the window.  A complete and utter usability failure.&lt;/p&gt;
&lt;p&gt;Android wins this round.  Still not sure if it is enough to get past the complete ease of use failure that is the Android system in general, so I’m still using both.&lt;/p&gt;
&lt;p&gt;…and still missing webOS.&lt;/p&gt;
</summary><category term="android"></category><category term="windows phone"></category><category term="gps"></category><category term="navigation"></category></entry><entry><title>Windows Phone Podcast Experience</title><link href="http://www.joesacher.com/blog/tech/windows-phone-podcast-experience/" rel="alternate"></link><updated>2011-09-07T00:00:00-04:00</updated><author><name>Joe Sacher</name></author><id>tag:www.joesacher.com,2011-09-07:blog/tech/windows-phone-podcast-experience/</id><summary type="html">&lt;p&gt;The “Mango” update for Windows Phone, or version 7.5 for those less fruity, adds many features.  This article is dealing with the podcasting capabilities.  On webOS, I made daily use of a brilliant piece of software called drPodder.
Moving from this almost clairvoyant app to the integrated podcast ability of Windows Phone is quite jarring.&lt;/p&gt;
&lt;p&gt;I will be outlining the current successes and fails with Windows Phone which keep it from being an enjoyable podcasting experience.&lt;/p&gt;
&lt;div class="section" id="adding-podcasts"&gt;
&lt;h2&gt;Adding podcasts&lt;/h2&gt;
&lt;p&gt;Adding podcasts from the device is only possible by searching the Zune podcast library.  If the podcast does not exists in the library, you cannot add it from the phone.
If you have an obscure podcast, you can add an rss feed through the Zune desktop software.  Not at all ideal, but it does work.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="playback-order-win"&gt;
&lt;h2&gt;Playback Order (Win)&lt;/h2&gt;
&lt;p&gt;When setting up a podcast, you can specify the number of episodes you wish to download to the phone at a time and the order (oldest or newest first.)  This makes sense.
Some podcasts are episodic and it would be confusing to listen to them in anything but chronological order.  News podcasts might make more sense to listen to the latest first and the older if you have time.&lt;/p&gt;
&lt;p&gt;But what happens when you want to listen to them from oldest to newest for a podcast that has been out for years?  That brings us to…&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="episode-management-fail"&gt;
&lt;h2&gt;Episode Management (Fail)&lt;/h2&gt;
&lt;p&gt;I listen to many podcasts that have been around far before Windows Phone was a twinkle in a cell carrier’s eyes.  So I setup a new podcast that I am up to episode 107 on my current device.  I listen to it oldest first and set a sync of 3.
My Windows Phone will download Episodes 1, 2, and 3.  Then I can tap hold and mark as read.  However, I cannot do this until the episode is downloaded.  So the process of catching up is to download each episode and mark it as read.&lt;/p&gt;
&lt;p&gt;Tap and hold an undownloaded, unplayed episode should have an option to mark as played.  Ideally, there would be some functionality to “catch up” and mark all as played.
This would be more useful in a majority of cases when you are transitioning from a device where you have been a loyal listener.  If you set all to read and then have to reset the last 2 or 3 to unread, this is still a faster experience.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="video-support-win"&gt;
&lt;h2&gt;Video Support (Win)&lt;/h2&gt;
&lt;p&gt;The Windows Phone handles video podcasts very well.  Playback is crisp in visuals and program performance and start up time.  I don”t see anything in video that is a problem, other than the problems also common to any style podcast in general.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bookmarks-occasional-fail"&gt;
&lt;h2&gt;Bookmarks (occasional Fail)&lt;/h2&gt;
&lt;p&gt;Podcasts are much longer than songs.  It is not uncommon for them to pass 90 minutes.  Most people won”t listen to them at one sitting.  The podcast player should remember time into each episode of each show to which a listener has progressed.&lt;/p&gt;
&lt;p&gt;Bookmarks seem to work as expected in video podcasts.  However, I have had mixed results with audio, with many times getting no bookmark.  Instead of a complete oversight, which I originally assumed, it seems to be bugs in the process.
What I am running is still beta code, so we will have to wait to see if this is addressed in the version of Mango sent down to phones.  If you play from the main screen and are careful to pause, it seems to work.  Time will tell.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a2dp-bluetooth-support-fail"&gt;
&lt;h2&gt;&lt;span class="caps"&gt;A2DP&lt;/span&gt; Bluetooth Support (Fail)&lt;/h2&gt;
&lt;p&gt;While Bluetooth support on Windows Phone is woefully lacking, the &lt;span class="caps"&gt;A2DP&lt;/span&gt; profile seems to work perfectly for any audio only component.  When you bring video into the mix, nothing you do will make audio stream through your Bluetooth device.
This affects video podcasts along with all video on the device, including YouTube, local videos, and Netflix.&lt;/p&gt;
&lt;p&gt;If you will watch no video on the phone, you will find &lt;span class="caps"&gt;A2DP&lt;/span&gt; to satisfy you.  But with only partial support, you have no choice other than to use wired headphones if you consume any video at all.  This makes &lt;span class="caps"&gt;A2DP&lt;/span&gt; worthless.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="streaming-win"&gt;
&lt;h2&gt;Streaming (Win)&lt;/h2&gt;
&lt;p&gt;If you want to listen to an episode that you have not downloaded, no problem.  Streaming the episode worked great for both audio and video playback.  As long as you used those wired headphones for the video, that is.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="control-from-other-apps-win"&gt;
&lt;h2&gt;Control from Other Apps (Win)&lt;/h2&gt;
&lt;p&gt;While Windows Phone is not anywhere close to the multitasking that was enjoyed in webOS, they control of audio playback while moving around other apps works well.
If you at inside another application and wish to pause playback (or other controls, such as skipping a track) you simply hit either volume button.  The first touch of a volume button does not change the volume, but drops down a media control panel.
From here you can pause and go forward or back.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="summary"&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;After getting past the pain of catching up all the shows, it should work fine for steady state listening.  Heaven help me if I ever get behind again and just want to catch up.  I’ll be using this for my daily podcasts for a while and see how it goes.
Sure wish I could get my missing podcasts back though.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="windows phone"></category><category term="podcasts"></category></entry><entry><title>webOS to Windows Phone - What’s Missing?</title><link href="http://www.joesacher.com/blog/tech/webos-to-windows-phone-whats-missing/" rel="alternate"></link><updated>2011-09-02T00:00:00-04:00</updated><author><name>Joe Sacher</name></author><id>tag:www.joesacher.com,2011-09-02:blog/tech/webos-to-windows-phone-whats-missing/</id><summary type="html">&lt;p&gt;I’ve decided that I’ll be exploring both Android and Windows Phone as possible replacements for my nearly dead Palm Pre.  &lt;span class="caps"&gt;HP&lt;/span&gt; killed future hardware and we need phones, bad.
I purchased an &lt;span class="caps"&gt;HTC&lt;/span&gt; Arrive off eBay, slightly cheaper than I would get it from Sprint under contract.  I’ve been using it as a WiFi only device for about a week.
Wednesday night, I upgraded it to the developer’s release of Mango, the future update for Windows Phone.  Last night, I added this phone to our third “testing” line on Sprint.&lt;/p&gt;
&lt;p&gt;This article will detail the pain points that will exist on doing a webOS to Windows Phone (and specifically the &lt;span class="caps"&gt;HTC&lt;/span&gt; Arrive) transition.
I will also highlight the cool things I see that aren’t possible on webOS (at least Sprint available webOS phones).&lt;/p&gt;
&lt;div class="section" id="multitasking-vs-multipausing"&gt;
&lt;h2&gt;MultiTasking vs MultiPausing&lt;/h2&gt;
&lt;p&gt;webOS is still the best multitasking platform for mobile, full stop.  Windows Phone acts much like iOS, where apps are put into a pause state and resumed when reloaded.
The Arrive has three “soft” buttons on the front for Back, Windows, and Search.  These are needed to navigate and annoying at the same time.
I can’t tell you how often I accidentally tapped search and was bounced into Bing search.  Then a Back tap resumes where you were in a variably amount of time, depending on the app.&lt;/p&gt;
&lt;p&gt;In the development documentation, there is a term for preparing your application for this pause: “Tombstoning”.
Sit there and act dead and I’ll let you know when you can come out of the coffin.  Mango supposedly has faster resume, but like the iOS transition a short while ago,
the apps must be coded to use this for a faster resume.  Most I’ve used have not been updated.&lt;/p&gt;
&lt;p&gt;Holding the back button takes you to a similar view as card mode on webOS.  This isn’t nearly as nice, but I can work with it.  The cards will be a list of the last 5
(or less) apps that you have opened.  You will always start at the right and can swipe to the left in chronological order.  webOS this sure isn’t, but I can deal.
It isn’t as bad as I expected it would be.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="notifications"&gt;
&lt;h2&gt;Notifications&lt;/h2&gt;
&lt;p&gt;This is another feature where webOS tops the mobile space.  Others are getting close, but not there yet.  Windows Phone uses live tiles on the home screen to display some of this information.
However, there is not one place to go to see all that has happened.  I can live with Windows Phone version, but it is vastly inferior.  The unlock screen shows many of the “notifications”,
which is slightly like the locked display on webOS.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="calendars"&gt;
&lt;h2&gt;Calendars&lt;/h2&gt;
&lt;p&gt;When my wife and I purchased our webOS phones, over two years ago, we started expanding into the capabilities of webOS Synergy.  I use a work Exchange calendar, Google personal,
and my wife used two Google calendars for work and personal.  All of these show up on my Pre with no effort other than linking my Google account.  This is not the case with Windows Phone.
It is not even possible to see multiple calendars for one account in the current release of Windows Phone.
When I upgraded to Mango, this was possible, but &lt;a class="reference external" href="http://www.joesacher.com/blog/tech/multiple-google-calendars-on-windows-phone-mango/"&gt;only after a hack that I detailed in this article&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Since you only have to do this once, I call the Calendar a draw (once Mango comes out, that is.)  webOS has a few nicer features, but Windows Phone is 5x faster in getting through the info.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="touchstone"&gt;
&lt;h2&gt;Touchstone&lt;/h2&gt;
&lt;p&gt;The wireless charging setup for webOS phones and tablets is something that isn’t thought about, until you are plugging cabled into phones for the first time on two years.
I have my Pre sitting right in front of my keyboard on a Touchstone, right now.  When I leave my desk area, I just scoop it up.  It is there to tap songs or quickly look at notifications.
Just a handy setup.  This will be missed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="podcasts"&gt;
&lt;h2&gt;Podcasts&lt;/h2&gt;
&lt;p&gt;I have used drPodder for webOS, since early betas.  It is a great app with the ability to download podcasts directly from your phone, or stream them.  It supports audio and video,
as well as some advanced renaming features.  The negatives of using drPodder are all related to the error filled media playing implementation of webOS 1.4.5, where my Pre is stuck.
I just expect the last 6-10 seconds of a podcast to get cut off.  It just happens.  Starting a podcast playing back (even a downloaded one) can take up to 10 seconds.
If my Pre starts getting hot for some reason, playback slows to 80% speed.  But drPodder makes listening to and managing podcasts a breeze.  After playing, the file can be auto deleted.
You can play from bottom or top (oldest to newest or reverse).&lt;/p&gt;
&lt;p&gt;Mango has added podcasts directly into the Zune media system.  I was able to find a majority of the podcasts I listen to in the directory.
I am not used to the immediate response of the software, when lags where just part of the game with webOS.
The current setting is to download audio and video only when WiFi is connected, but this is configurable.
I cannot find a way to manually add an &lt;span class="caps"&gt;RSS&lt;/span&gt; feed to a podcast not in the Zune directory.  So immediately, I’m missing 3 of my normal podcasts.&lt;/p&gt;
&lt;p&gt;You have options of how many of each podcast to download, if you should get oldest or newest first, and if you should play them from oldest or newest.
So it seems to replace most functionality of drPodder.  But not so fast.&lt;/p&gt;
&lt;p&gt;Some of the podcasts I listen to are nearly 90 minutes.  I almost never listen to them at one sitting.  On webOS, drPodder just keeps my last place and when I start that episode again,
I’m just slightly before when I stopped.  If I leave the podcast in Zune player, and go back to it in the future, I’m right back at the beginning.  This has got to be a joke, right?
They aren’t bookmarking audio podcasts?  It looks like they are handled just like songs.  This is a complete and utter fail and makes audio podcast listening impossible on the device.&lt;/p&gt;
&lt;p&gt;Now for video podcasts, they are storing the position for each one.  I can pause 4 different episodes of a podcast, 3 different ones of another, and all will restore at the correct position.
So I have to download video versions of the podcasts that have them and listen to that on my drive into work, when I will never be looking at the video.
Have I been spoiled too much by drPodder, or is this implementation just not well formed?&lt;/p&gt;
&lt;p&gt;Podcasting on Windows Phone is a fail.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="video-playback"&gt;
&lt;h2&gt;Video Playback&lt;/h2&gt;
&lt;p&gt;Be it video podcasts or video files that you loaded on the phone via Zune software (which encodes them), they all play great.  However, I have not been able to figure out how to make
sound for Video come out over &lt;span class="caps"&gt;A2DP&lt;/span&gt; headsets.  Audio works great.  However, once you start a video, it either comes out of the speaker or wired headphones.  I’m not sure if this is an
&lt;span class="caps"&gt;HTC&lt;/span&gt; Arrive fail or a Windows Phone issue in general.  Why isn’t audio just audio.  Just when I thought that I could used the video versions of a podcast to get past the bookmark issue,
now I can’t use &lt;span class="caps"&gt;A2DP&lt;/span&gt; headphones for that.  You seriously have to be kidding me.  This is a major annoyance and needs to be addressed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="web-browser"&gt;
&lt;h2&gt;Web Browser&lt;/h2&gt;
&lt;p&gt;There is no way to describe the web browser in current Windows Phone, other than crap.  It was really bad.  The Mango update essentially loads &lt;span class="caps"&gt;IE9&lt;/span&gt; onto your phone.  While this is still
a step back from the Chrome or Firefox that I’m used to on the desktop, it is a decent mobile browser.  &lt;span class="caps"&gt;ACID3&lt;/span&gt; test jumps from a 12 to a 95, between current &lt;span class="caps"&gt;WP&lt;/span&gt; and Mango.  For most browse
ability, the Windows Phone wins over my old Palm Pre.  This is a combination of screen size and processor speed.  However, there are sites which my Pre can open that Windows Phone Mango
will not.  For getting something done all over the web, webOS still wins here.  For most use, the speed of the newer phone and clean &lt;span class="caps"&gt;OS&lt;/span&gt; is on top.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="camera"&gt;
&lt;h2&gt;Camera&lt;/h2&gt;
&lt;p&gt;If the Pre3 was released, I think this would be equal or slightly into webOS for functionality.  Video editing on the Pre is pretty cool.  However, my Pre cannot shoot a clear shot closer
than 8 inches.  Scanning barcodes with the phone? Don’t make me laugh.&lt;/p&gt;
&lt;p&gt;The Arrive has a 5 &lt;span class="caps"&gt;MP&lt;/span&gt; autofocus camera, which allows me to shoot as close as 2-3 cm.  Dedicated camera button that never seems to freeze for up to 20 seconds when I want to load it, as my
aging Pre will do occasionally.&lt;/p&gt;
&lt;p&gt;There is also automated uploads to SkyDrive (Microsoft’s cloud storage) if you desire.  This is a hands down win for the &lt;span class="caps"&gt;HTC&lt;/span&gt; Arrive and Windows Phone.  The uploads to Facebook and other
upload features that a almost never using on the Pre are also available here.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="apps"&gt;
&lt;h2&gt;Apps&lt;/h2&gt;
&lt;p&gt;The Windows Phone Marketplace isn’t iOS or Android level yet, but there are Apps.  More and better games than available for webOS.  The one missing app that I hope they get soon is Pandora.
I have gotten used to listening to a mellow mix over &lt;span class="caps"&gt;A2DP&lt;/span&gt; headphones while I work.  This will be missed.&lt;/p&gt;
&lt;p&gt;You know one app that is pretty cool?  Netflix.  Streaming on my phone.  Oh, yeah.  These are the things that may push past any of the pain.  The real apps we have been waiting for on webOS
for two years.  While there are some missing innovative apps that are unique to webOS, Windows Phone is walking to the finish line to win on this one.  They have the apps that I hoped &lt;span class="caps"&gt;HP&lt;/span&gt;
scale would bring to webOS.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bing-search"&gt;
&lt;h2&gt;Bing Search&lt;/h2&gt;
&lt;p&gt;Does Windows Phone have an app to identify songs?  Yes, but with Mango it is baked into the &lt;span class="caps"&gt;OS&lt;/span&gt; itself.  (This is also why Shazam has upped their price to $5.99 for Windows Phone, as
they will be obsolete when the Mango update pushes out.)  To search for music in Mango, tap the search button and tap the music icon at the bottom.  Then let the phone listen.
It does a decent job identifying music, with a link to the Zune marketplace if you want to purchase it.&lt;/p&gt;
&lt;p&gt;They also have visual search, that allows you to photograph text with the camera and translate it into other languages, or pull up &lt;span class="caps"&gt;QR&lt;/span&gt; code, Microsoft Tags, UPCs for books, CDs, DVDs.
It isn’t perfect with the text, but better than I expected.&lt;/p&gt;
&lt;p&gt;You also have voice search.  This works amazingly well.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="speech-to-text-and-text-to-speech"&gt;
&lt;h2&gt;Speech to Text and Text to Speech&lt;/h2&gt;
&lt;p&gt;I’m interested in trying this out on Android, as Molly Wood indicated that she uses it in more places than just searching.  However, I found it very useful.  If you hold down the windows key,
you activate voice mode.  I may say: “text Amy”, it will respond with which of my wife’s numbers I should text.  I say “Google” for her Google Voice number.  It then says “Texting Amy Sacher”
and goes to the &lt;span class="caps"&gt;SMS&lt;/span&gt; composition mode.  Then I say what I want to text.  It gets it down fairly accurately and reads it back to me.  I can say “Send”, “Try Again”, or “Cancel”.&lt;/p&gt;
&lt;p&gt;&lt;span class="dquo"&gt;“&lt;/span&gt;Open” followed by any installed app name works to start up that app.  “Call” followed by a phone number works as long as you say each digit and don’t call 18 “eighteen” instead of “one, eight”.
If it doesn’t recognize a valid verb noun combo, it will bing search for the text you spoke.  This blows away the functionality that I’ve played with on the Pre2.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="trial-version"&gt;
&lt;h2&gt;Trial Version&lt;/h2&gt;
&lt;p&gt;Windows Phone apps allow trial versions.  This would be fairly simple to hack around in webOS and is possible, because the apps are compiled.
I have tried many apps and it keeps be from buying bad apps, which is have done many times on webOS.  This is good for keeping the collection of apps strong.
If you try 3 apps to provide one service, download all the trials.  Then buy the one you like, but review all three.  This will reward good developers.&lt;/p&gt;
&lt;p&gt;I’m downloading all the trials of Instapaper apps right now.  Let the best app win.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tethering"&gt;
&lt;h2&gt;Tethering&lt;/h2&gt;
&lt;p&gt;Of all the features that I use on my webOS phone, tethering for free on Sprint is the most needed, due to now having the Touchpad.  This is easy on both webOS and Android.
I’m not sure if this is possible with the &lt;span class="caps"&gt;HTC&lt;/span&gt; Arrive and Windows Mobile, yet.  I believe some type of tethering will be available with Mango, but if you can do it without the extra
fee is yet to be seen.  This may be the deal breaker that takes me to Android.  But comparing webOS to Windows Phone, webOS knocks it out of the park.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="homebrew"&gt;
&lt;h2&gt;Homebrew&lt;/h2&gt;
&lt;p&gt;There is no debate on this one.  webOS homebrew is the only thing that kept people on webOS in the dark days (1) before &lt;span class="caps"&gt;HP&lt;/span&gt; acquisition.  It is also how people are staying on webOS with
FrankenPre2s and other methods of staying on their carrier and getting through the dark days (2) after the &lt;span class="caps"&gt;HP&lt;/span&gt; cancellation.  There is not a more open system than webOS, period.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="getting-files-on-device"&gt;
&lt;h2&gt;Getting Files on Device&lt;/h2&gt;
&lt;p&gt;There is no &lt;span class="caps"&gt;USB&lt;/span&gt; mode for Windows Phone.  Like iTunes on iOS, you go through Zune.  This is annoying.  The only other real option is going through SkyDrive.
This worked to edit an Office document on the phone from SkyDrive and push it back up there.&lt;/p&gt;
&lt;p&gt;With webOS stock, you can connect your phone to your computer as a &lt;span class="caps"&gt;USB&lt;/span&gt; drive.  Copy either way.  All good.  With a little WebOSInternals, you can &lt;span class="caps"&gt;SSH&lt;/span&gt; into the phone and &lt;span class="caps"&gt;SCP&lt;/span&gt; files with the
phone just being on the same network.  This is an easy webOS win and I have many “work arounds” to learn if I will be staying on Windows Phone.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="development"&gt;
&lt;h2&gt;Development&lt;/h2&gt;
&lt;p&gt;While this doesn’t affect strictly users, I see the development environment for each platform pretty well matched.  There are cool things that webOS does where Windows Phone can’t match,
and vice versa.  We are still waiting for mic access and other hardware access on webOS.  Both platforms are much nicer than trying to develop for Android.  I’m looking into MonoGame to port
apps to Android, iOS, Mac, Linux, and possibly webOS, in addition to the native support on Windows Phone, Windows, and XBox.&lt;/p&gt;
&lt;p&gt;There is also a fun little scripting app on the phone called TouchDevelop.  This exposes most if not all the phone’s capabilities for your little mini programs.  I made a 4 line program
that prompted me to talk, converted Speech to Text, then used Text to Speech to read it back to me.  I’m sure I’ll mes with this more.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The only part that I will have trouble working past is if I can’t get tethering on my Windows Phone.   I will be getting an Android phone via our two year upgrade discount, to test that
platform as well (most likely a Nexus S).  No conclusions what platform I’m landing on yet, still much more research to be done.  Unlike webOS, the hardware is solid.
Performance of individual apps blow away my aging webOS hardware.  However, there are software fixes that are still needed.  Since Mango will not hit for a month or more, these will be a
while in coming.’, ‘webOS to Windows Phone: What’s Missing?&lt;/p&gt;
&lt;/div&gt;
</summary><category term="webos"></category><category term="windows phone"></category></entry><entry><title>Multiple Google Calendars on Windows Phone (Mango)</title><link href="http://www.joesacher.com/blog/tech/multiple-google-calendars-on-windows-phone-mango/" rel="alternate"></link><updated>2011-08-31T00:00:00-04:00</updated><author><name>Joe Sacher</name></author><id>tag:www.joesacher.com,2011-08-31:blog/tech/multiple-google-calendars-on-windows-phone-mango/</id><summary type="html">&lt;p&gt;With webOS, Synergy just happened.  (&lt;span class="caps"&gt;OK&lt;/span&gt;, it didn’t just happen.  Many engineers spent many hours making this work seamlessly.  But to the user, it “just happened”.)  You don’t realize how nice this is, until you try a system that doesn’t really have it.  Windows Phone 7 with NoDo (the current “up to date” version for the public) has this problem.  The update due out September or October called Mango (or Windows phone 7.5) enables more Synergy like features, such as multiple calendars.  However, Google doesn’t allow you to select more than one.  But there’s a hack for that.&lt;/p&gt;
&lt;p&gt;For most Windows Phone 7 users who are waiting for the Mango release, this won’t be useful yet.  But you can go through the steps if you want, and it will magically show all your Google calendars when you get the &lt;span class="caps"&gt;OS&lt;/span&gt; update.&lt;/p&gt;
&lt;p&gt;Google is only selecting the primary calendar to sync to your &lt;span class="caps"&gt;WP7&lt;/span&gt; calendar.   In my situation, I have an Exchange Work calendar and a Google Personal calendar.  Both of those showed up with &lt;span class="caps"&gt;WP7&lt;/span&gt; NoDo.  What was missing is my wife’s Google Work and Personal calendars.  Here is how I enabled them.&lt;/p&gt;
&lt;p&gt;Google will allow you to configure the calendar to sync if it believes you are an iOS device.  If you have access to an iOS device (iPhone, iPad, iPod Touch, etc.) you can use those to do this.  Otherwise, we will just fake it.&lt;/p&gt;
&lt;p&gt;To fake an iPhone, I used Google Chrome.  You will want to start up the browser on the command line.  So open up a Command Shell and “cd” (change directory) into the proper directory for chrome.exe.  If you don’t know where this is, right-click on the shortcut in Windows and select Properties.&lt;/p&gt;
&lt;p&gt;You will need to close down any Chrome browsers you may have open before you do this.  We will paste the following into your command prompt to start Chrome as an iOS device.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;chrome.exe --user-agent="Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_0 like Mac OS X; en-us) AppleWebKit/532.9 (KHTML, like Gecko) Version/4.0.5 Mobile/8A293 Safari/6531.22.7"
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="figure" style="width: 468px; height: auto; max-width: 100%;"&gt;
&lt;img alt="" src="/images/posts/multiple-google-calendars-on-windows-phone-mango/GC_Inital.png" style="width: 468px; height: auto; max-width: 100%;"/&gt;
&lt;p class="caption"&gt;Browse to &lt;a class="reference external" href="http://m.google.com/sync"&gt;http://m.google.com/sync&lt;/a&gt;.  You should see something similar to this.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure" style="width: 468px; height: auto; max-width: 100%;"&gt;
&lt;img alt="" src="/images/posts/multiple-google-calendars-on-windows-phone-mango/GC_UnChecked.png" style="width: 468px; height: auto; max-width: 100%;"/&gt;
&lt;p class="caption"&gt;Click on WindowsPhone and you will see your calendars.&lt;/p&gt;
&lt;div class="legend"&gt;
Notice only your main calendar is checked.  No problem, check the others.  But that doesn’t work.  Google has blocked this with JavaScript.  We just need to turn JavaScript off.&lt;/div&gt;
&lt;/div&gt;
&lt;div class="figure" style="width: 462px; height: auto; max-width: 100%;"&gt;
&lt;img alt="" src="/images/posts/multiple-google-calendars-on-windows-phone-mango/GC_Javascript.png" style="width: 462px; height: auto; max-width: 100%;"/&gt;
&lt;p class="caption"&gt;Click on the wrench icon at the top right of Chrome and select Options.  Now click Under the Hood on the left.  Click the Content Settings button.  Change JavaScript section to not allow any site to run JavaScript:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure" style="width: 468px; height: auto; max-width: 100%;"&gt;
&lt;img alt="" src="/images/posts/multiple-google-calendars-on-windows-phone-mango/GC_Checked.png" style="width: 468px; height: auto; max-width: 100%;"/&gt;
&lt;p class="caption"&gt;Now you will be able to select the other calendars and click Save.&lt;/p&gt;
&lt;div class="legend"&gt;
Going back to your Mango phone, you should be able to sync and see all calendars.  Just remember to reselect JavaScript.&lt;/div&gt;
&lt;/div&gt;
</summary><category term="webos"></category><category term="windows phone"></category><category term="calendars"></category></entry><entry><title>Encoding Videos for the HP Touchpad</title><link href="http://www.joesacher.com/blog/tech/encoding-videos-for-the-hp-touchpad/" rel="alternate"></link><updated>2011-08-10T00:00:00-04:00</updated><author><name>Joe Sacher</name></author><id>tag:www.joesacher.com,2011-08-10:blog/tech/encoding-videos-for-the-hp-touchpad/</id><summary type="html">&lt;p&gt;This post is for those who have ripped their DVDs and other video media and would like to load it onto their &lt;span class="caps"&gt;HP&lt;/span&gt; Touchpad.  I started to encode videos for the &lt;span class="caps"&gt;HP&lt;/span&gt; Touchpad using HandBrake, which had given me success for video targeting my Palm Pre.   I used iPad profiles, as the display size is exactly the same.  It seemed that no matter what I tried, the files would not show up in Photos &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; Videos app.  I tried quite a few options and then just gave up.  Many issues that I had with encoding video for the Touchpad seem to have been fixed with the 3.0.2 webOS update.&lt;/p&gt;
&lt;p&gt;The too long didn’t read version of this post is this: Download HandBrake, render using the iPad Preset and change frame rate to Same as Source.  Upload to Touchpad and be happy.  If you care about some of the testing I did, continue reading.&lt;/p&gt;
&lt;p&gt;I started with a high end &lt;span class="caps"&gt;HD&lt;/span&gt; video file, to take advantage of the full resolution of the Touchpad.  The video I played with is a BluRay version of Pixar’s Partly Cloudy.  This is a 1080p video (1920x1080), with 5.1 channel &lt;span class="caps"&gt;AC3&lt;/span&gt; sound (48 kHz and 16 bit).  This is most likely the highest video quality source that people will use for Touchpad encoding.  Runtime is 5:48 with 23.976 frame rate.&lt;/p&gt;
&lt;p&gt;Two pieces of software I used are Format Factory (now a dead link) and &lt;a class="reference external" href="http://handbrake.fr/"&gt;Handbrake&lt;/a&gt; (Windows, Mac, Linux. Tested on the Windows version).&lt;/p&gt;
&lt;p&gt;First render was in Format Factory with the iPad setting at 720x480 &lt;span class="caps"&gt;MPEG4&lt;/span&gt;.  This rendered slightly faster than I had been seeing with HandBrake.  There is a noticeable quality loss with stretching the 720 out to the Touchpad’s 1024 width, but the video is very watchable.  If you did not have a 1024 width video to compare it to, you would not see an issue.  File Size 47.0 Mb&lt;/p&gt;
&lt;p&gt;I took the same iPad setting and bumped the resolution to 1024x768, keeping all the other settings the same.  What surprised me is the file size dropped to 46.6 Mb.  Looking closer, I noticed that the video bit rate is fixed at 1000 kbs, rather than using HandBrake’s quality style setting.&lt;/p&gt;
&lt;p&gt;HandBrake has a video format for the iPad at 1024 width with aspect ratio set height (but steps width down to source video width if smaller than 1024).  The only change I made before I ran this encoding was to set frame rate as Same as Source.  (It was defaulted to 29.97.)  The encoding takes longer than Format Factory (1.1-1.4x).  The file size came out to 69.8 Mb.&lt;/p&gt;
&lt;p&gt;When you look at both 1024 wide videos on the Touchpad, you can see the difference between Format Factory’s 1120 kbs data rate and HandBrake’s 1672 kbs data rate.  There was quite a bit of motion blocking artifacts with &lt;span class="caps"&gt;FF&lt;/span&gt;’s encode.  The added time to render due to detecting quality of the frame dynamically is worth it.&lt;/p&gt;
&lt;p&gt;I upped the Format Factory setting to use 1500 kbs video data rate (for similar to HandBrake’s total data rate) to do an apples to apples comparison.  File size came out to 67.9 Mb, so pretty close.&lt;/p&gt;
&lt;p&gt;When looking at the two on the Touchpad, they are very hard to tell apart most of the time.  The biggest issues is with horizontal streaking on single color backgrounds for the Format Factory version.  By going with a fixed bit rate, rather than the HandBrake’s quality based setting, you also get blocking during highly changing scenes.  HandBrake will use less data during the static scenes, but more during dynamic scenes, resulting in a better encoding at the same overall file size.&lt;/p&gt;
&lt;p&gt;I rendered some of the files that I have ripped from my DVDs (most 640 x proper aspect ratio height) through HandBrake, using the iPad profile.  These play great.  The Touchpad had no issues with m4v or mp4 file extension for the H.264 &lt;span class="caps"&gt;MPEG&lt;/span&gt; 4 files these apps were generating. It will not display the Xvid based &lt;span class="caps"&gt;MPEG4&lt;/span&gt; files that I have encoded for use with my media players and Boxee Box before H.264 was the standard.&lt;/p&gt;
&lt;p&gt;Watching video on the Touchpad just reminds you how great the audio on this thing sounds.  Really a good video viewing experience.  Do some transcoding and enjoy your moving picture shows.&lt;/p&gt;
</summary><category term="webos"></category><category term="video encoding"></category><category term="touchpad"></category></entry><entry><title>Touchpad Keyboard - Good, Bad, and Ugly</title><link href="http://www.joesacher.com/blog/tech/hp-touchpad-keyboard-good-bad-and-ugly/" rel="alternate"></link><updated>2011-08-06T00:00:00-04:00</updated><author><name>Joe Sacher</name></author><id>tag:www.joesacher.com,2011-08-06:blog/tech/hp-touchpad-keyboard-good-bad-and-ugly/</id><summary type="html">&lt;p&gt;While there is no doubt that software for the &lt;span class="caps"&gt;HP&lt;/span&gt; Touchpad is in its infancy, it is hard not to see the great usefulness and potential.  There are a few good writing apps for the Touchpad, including those for WordPress blogging.  I’m composing this in the WordPress App for WebOS tablet.  Any of these are much easier to use with a hardware keyboard, than attempting to type quantity on a virtual keyboard. The &lt;span class="caps"&gt;HP&lt;/span&gt; Touchpad Keyboard is mostly a success.  My largest annoyances with it can be addressed with software fixes in future WebOS updates.&lt;/p&gt;
&lt;p&gt;At first I expected the chicklet keys to be annoying, compared to a full sized keyboard.  It was surprising to me that they were not.  The keys depress quickly, to give a feeling of depth, before stopping.  I have no trouble typing as fast as I would on my laptop.&lt;/p&gt;
&lt;div class="section" id="the-good"&gt;
&lt;h2&gt;The Good&lt;/h2&gt;
&lt;p&gt;I am listening to music on the Touchpad as I type. When a song pops up that I’m not enjoying, I tap the &lt;span class="caps"&gt;FF&lt;/span&gt; button at the top of the keyboard and keep going.  This is more handy than I expected, as most media keys on desktop keyboards have gone unused by me.  Possibly it is the feeling that the Touchpad is just the monitor and you want to do everything on the keyboard as you are working.  It works for me.&lt;/p&gt;
&lt;p&gt;I like the WebOS specific keys.  In addition to being a very functional keyboard, it integrates well with WebOS for control of power, volume, playback, brightness, show/hide for virtual keyboard, immediate jump to Just Type, and dedicated “card view” button.  Of these, Just Type is amazing.  I’m typing something and think, “hmm, I wonder about subject x”.  Tap the magnifying glass button above the 1 key, type “subject x” and tap enter.  A web page with the Google search pops up.  (Before writing this, I had no idea that Subject X was a character in a Marvel comic book. Learn something new every day.)&lt;/p&gt;
&lt;p&gt;This article will have many points in the Bad and Ugly category below. This doesn’t mean that it isn’t a good keyboard. For the most part these failings are software that I hope are addressed in future WebOS versions. The hardware is good enough to make this a great keyboard experience with the right supporting code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-bad"&gt;
&lt;h2&gt;The Bad&lt;/h2&gt;
&lt;p&gt;Two hardware design issues can be seem by just observing the keyboard before even using it.  These don’t detract terribly from the use of the keyboard, but if it isn’t intuitive or obvious, it is usually a design fail.&lt;/p&gt;
&lt;p&gt;First, there is no indication of how to change the batteries.  Without reading the instructions, I did not know how to slide the battery cover.  A simple arrow on the cover would completely solve this issue.  The battery life is supposed to be good enough that batteries last for months. We won’t have the instructions by then, I hope I remember which direction to slide the cover.&lt;/p&gt;
&lt;p&gt;Second, the power switch has two settings: black and slightly whiter black. It is difficult to know which setting is “on”.  This goes away with training of what is the right direction, but a product should be designed to be able to be picked up and used. These problems could be fixed with a new battery cover, adding a 1 and 0 icon for power and the cover removal arrow.&lt;/p&gt;
&lt;p&gt;I’ve run into unintended key repeats twice in about 3 hours of typing. I’ll be typing the word “most” and get mooooooooooost. This could be either a hardware or software problem.  It doesn’t really feel like the key contacts are sticking, but it would be possible under the key without me seeing it.  It would also be possible for the software to be hanging for just a bit.&lt;/p&gt;
&lt;p&gt;The Touchpad has two styles of correction for words it thinks are wrong. First, if it is pretty sure that you are wrong and it knows what is right, it will do an auto correction. This replaces the word you typed with the “correct” one and underlines the word in gray.  The second method is when the correct fix is not known, so the incorrect word is left underlined in red. The user may tap that word and select the correction or enter it into the dictionary if the word typed was actually correct.&lt;/p&gt;
&lt;p&gt;When a word is auto corrected and what you typed is correct, you press Delete and the original is restored. That is a great idea, but is only effective if you are a slow typist.  With the Bluetooth keyboard, you are into the next word before you realize that it made a correction.  After you have typed a new letter, you can no longer correct it quickly with Delete.  You must delete the letter(s) you typed, delete the gray underlined word, retype the word, hit space, hit delete to undo the auto correction which will happen again, hit space again and continue.  Optionally, you can tap the gray underlined word to restore the original word, but this takes you off the keyboard so it totally depends on the length of the word as to which is faster.  This restored word will be underlined in red, so tapping it and adding to the dictionary will eliminate the problem with this word in the future.  Otherwise the Touchpad will continue to replace it each time it is typed.&lt;/p&gt;
&lt;p&gt;You do have the option of disabling Auto Correct in the Text Assist App in Settings.  I disabled it while typing the last two paragraphs and made enough mistakes it would have auto corrected, that I lost time over what I saved fixing “good” words.  I have it back on and will leave it that way.  As you train the dictionary to the vernacular you use, this will be less and less of an issue.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-ugly"&gt;
&lt;h2&gt;The Ugly&lt;/h2&gt;
&lt;p&gt;WebOS is an elegant &lt;span class="caps"&gt;OS&lt;/span&gt;.  That is part of what draws people into it.  The operation is intuitive and clean.  Sadly, this stops when a keyboard is introduced.  There is a card view button, but you can’t do anything with it.  It only saves you an up swipe.  Here is how it should function:&lt;/p&gt;
&lt;p&gt;Tap the card view button.  Press left or right arrow to select different cards.  Tap Enter or Down Arrow to bring the card to full screen. Maybe Control+Up would close the currently selected card. Nice.  Elegant.  WebOS-like.&lt;/p&gt;
&lt;p&gt;The Just Type search key is great. From anywhere, I can jump to a system wide search.  Then it fails to be like WebOS on the keyboard.  Here is how it should function:&lt;/p&gt;
&lt;p&gt;Tap the Just Type button.  Type what you want to search.  Then the Up and Down keys allow you to select different options from the default.  Then press Enter to go to the one you selected.  This is a situation where two key taps on down would be faster than reaching over to tap the screen.  And to blow our minds with usefulness, how about Control+Left or Right to switch between All, Contacts, Content, or Actions.  That would be awesome.  Elegant.&lt;/p&gt;
&lt;p&gt;The biggest of the ugly is the lack of expected functionality of the keyboard while you are typing.  I ran into this over a dozen times and it makes using the Touchpad for final editing a frustrating experience.&lt;/p&gt;
&lt;p&gt;Selecting text should be possible by holding down Shift and using arrow keys.  This works exactly as it should when you are either in a text area that has less than a screen full of text in it or is scrolled to the top of the text buffer.  If you are in the middle of a multi screen document and try a selection with either Shift+Left/Right or Shift+Up/Down, you get a little highlighted and then the screen tries to scroll up or down with every arrow key push.&lt;/p&gt;
&lt;p&gt;I just deleted 6 words and retyped them, because I couldn’t do a Cut and Paste quicker.  That is a big fail. It is unusable.  I must resort to the tap and hold, tap Select, drag edges to region and Cut or Copy, so I only do this for sentence length or longer text sections.&lt;/p&gt;
&lt;p&gt;This leads me into the second problem with productivity while editing on the Touchpad.  Copy and Paste.  Why doesn’t Control + X, C, and V function?  It is inexcusable on a business class device that will be used for document editing.  I have used it over a dozen times editing this post and follow it up with having to use the slower methods of the touch screen, as I remember that it doesn’t work.  It is almost subconscious for anyone that has done editing on the computer.  It is &lt;span class="caps"&gt;THE&lt;/span&gt; &lt;span class="caps"&gt;WAY&lt;/span&gt; to copy and paste if you are using a hardware keyboard, full stop.  Fix this, &lt;span class="caps"&gt;HP&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;So, there you have it, The Good, The Bad, and The Ugly of using the &lt;span class="caps"&gt;HP&lt;/span&gt; Touchpad Keyboard to actually do work on the Touchpad.  In its current state, it is great for getting thoughts down.  However, doing the final polishing is painful.  I forced myself to use the Touchpad for this entire article.  In reality, I will be switching back to the laptop for any final editing until the two major text editing issues are addressed, unless I don’t have a choice.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="webOS"></category><category term="touchpad"></category><category term="keyboard"></category></entry><entry><title>Hacking can be bad for your Kindle App’s Health</title><link href="http://www.joesacher.com/blog/tech/unrecoverable-problems-with-kindle-app-on-touchpad/" rel="alternate"></link><updated>2011-08-06T00:00:00-04:00</updated><author><name>Joe Sacher</name></author><id>tag:www.joesacher.com,2011-08-06:blog/tech/unrecoverable-problems-with-kindle-app-on-touchpad/</id><summary type="html">&lt;p&gt;If you feel like following &lt;a class="reference external" href="http://www.joesacher.com/blog/tech/loading-mobi-books-into-touchpads-kindle-app/"&gt;my hacking example&lt;/a&gt; to load .mobi format books onto the Touchpad’s Kindle App, be ready to have to reload it.  If the app has a problem parsing the book for any reason, you are done.  With no back gesture on the Touchpad, there is no way to back out of the crashed book load.  Each time you start the app, it will load the file into a crash situation.  (This doesn’t crash the Touchpad, just the app.)&lt;/p&gt;
&lt;p&gt;The solution is to delete the Kindle App and redownload.  I’m poking in the source to see if there is a clearer way to test books against the hybrid components that parse the ebook files, without requiring this tedious reload.  You have been warned.&lt;/p&gt;
</summary><category term="webOS"></category><category term="touchpad"></category><category term="ebooks"></category></entry><entry><title>Loading mobi books into Touchpad’s Kindle App</title><link href="http://www.joesacher.com/blog/tech/loading-mobi-books-into-touchpads-kindle-app/" rel="alternate"></link><updated>2011-08-05T00:00:00-04:00</updated><author><name>Joe Sacher</name></author><id>tag:www.joesacher.com,2011-08-05:blog/tech/loading-mobi-books-into-touchpads-kindle-app/</id><summary type="html">&lt;p&gt;I have purchased many ebooks and created others manually in the .mobi format.  This is very easy to load onto my Kindle device to read.  Unfortunately, the current Kindle app on the Touchpad does not allow loading ebooks other than downloading from Amazon.  This is unfortunate and makes the Touchpad a poor replacement for my Kindle.&lt;/p&gt;
&lt;p&gt;I did not know if the Kindle App on the Touchpad could even handle .mobi format files, if I could get them there.  Amazon purchased MobiPocket and their original ebook format was only slightly modified .mobi file.  I assumed that the reader plugin would understand the .mobi format and I was right.&lt;/p&gt;
&lt;p&gt;The books for your Kindle app are stored in the /media/internal/.palmkindle directory.  The book files have strange names such as B000JMLFLW_EBOK.azw.  I’m not sure if this is the same on each device for a given book, but I would assume so.  Best guess is that it is just the primary key for that book in Amazon’s &lt;span class="caps"&gt;DB&lt;/span&gt;.  This is the file for a free book of &amp;lt;em&amp;gt;Pride and Prejudice&amp;lt;/em&amp;gt; by Jane Austen.&lt;/p&gt;
&lt;p&gt;There is a subdirectory holding the cover images, called appropriately “coverCache”.  Inside there, you will find up to three files of the format: &lt;span class="caps"&gt;B000JMLFLW&lt;/span&gt;-[small|medium|large].jpg.  Large does not exist for all books.  Large is 333x500, Medium is 120x180, and Small is 52x78.&lt;/p&gt;
&lt;p&gt;I decided to try a copy of John Ringo’s &lt;em&gt;When the Devil Dances&lt;/em&gt; that I had purchased from webscription.net.  I replaced the original B000JMLFLW_EBOK.azw with the .mobi format of that book using the same name.  Then I saved images for all three sizes with the same prefix.  When I ejected the Touchpad, the ebook loaded correctly, but the cover image did not change for the thumbnail style of books display.  When I changed to a list view, the image was correct.  I had not gone into list mode before, so I am guessing that caching is used to only load images once.  This makes sense, as the book cover is not a rapidly changing asset.&lt;/p&gt;
&lt;div class="figure" style="width: 1024px; height: auto; max-width: 100%;"&gt;
&lt;img alt="" src="/images/posts/loading-mobi-books-into-touchpads-kindle-app/kindle_2011-02-08_231413.png" style="width: 1024px; height: auto; max-width: 100%;"/&gt;
&lt;p class="caption"&gt;At this point I rebooted, to try to uncache the cover image.  This worked.  I now had a book that looked correct in the thumbnail view.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure" style="width: 1024px; height: auto; max-width: 100%;"&gt;
&lt;img alt="" src="/images/posts/loading-mobi-books-into-touchpads-kindle-app/kindle_2011-02-08_230757.png" style="width: 1024px; height: auto; max-width: 100%;"/&gt;
&lt;p class="caption"&gt;Tapping on the book loaded &lt;em&gt;When the Devil Dances&lt;/em&gt; with an expected title up top of &lt;em&gt;Pride and Prejudice&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The book had no issues being read.  So all that is needed is updating the book database to correct the title.  That would complete the hack.  I have no idea how this will interface with Amazon syncing for distance read.  I have turned off syncing before I started messing with this to keep from “mucking things up”.&lt;/p&gt;
&lt;p&gt;What this proves is that sideloading non-Amazon sourced books should be fairly trivial to add to the Kindle App.  It would just require updating the database to show the new books and loading a .mobi file and cover images.  Amazon doesn’t want to.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.joesacher.com/blog/tech/unrecoverable-problems-with-kindle-app-on-touchpad/"&gt;Please read this warning if you plan to attempt this.&lt;/a&gt;&lt;/p&gt;
</summary><category term="webOS"></category><category term="touchpad"></category><category term="ebooks"></category></entry><entry><title>Touchpad WiFi - Hidden Passcode Hell</title><link href="http://www.joesacher.com/blog/tech/touchpad-wifi-hidden-passcode-hell/" rel="alternate"></link><updated>2011-08-02T00:00:00-04:00</updated><author><name>Joe Sacher</name></author><id>tag:www.joesacher.com,2011-08-02:blog/tech/touchpad-wifi-hidden-passcode-hell/</id><summary type="html">&lt;p&gt;I have just spent the last 30 minutes trying to get our complex 64 character &lt;span class="caps"&gt;WPA&lt;/span&gt; key into my &lt;span class="caps"&gt;HP&lt;/span&gt; Touchpad so I can start the setup procedure.  The password field for the WiFi key is frustrating.
The last character is only shown for a second or two, then it too fades into the dots of obscurity.  This is fine in normal use with passwords you are used to typing, but a WiFi key is complex and entered only once per new device.
When you add to this a finiky WiFi network acceptance, you have time after time frustration.  The key is entered and network selected (even with a check mark!), but for some reason the Touchpad won’t accept anything but Cancel.
Guess who gets to type the key in again?&lt;/p&gt;
&lt;p&gt;I finally figured out how to view a key as I enter it and validate the key, so I can be sure the passcode part of the network acceptance is valid.  If I had done this the first time I started to enter our complex key, I would have only had to type it once and been able to verify it easily.  Typing 64 characters with only vision on the last one is a little too tough.&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;HP&lt;/span&gt;, &lt;span class="caps"&gt;PLEASE&lt;/span&gt; make an option to show the passcode.  All you have to do is change the enyo options of the text box.  Entering a passcode for WiFi should not be this hard.  If it must be secure by default, put a check box that allows “Show Passcode”.&lt;/p&gt;
&lt;p&gt;Here is my work around:&lt;/p&gt;
&lt;div class="figure" style="width: 444px; height: auto; max-width: 100%;"&gt;
&lt;img alt="" src="/images/posts/hp-touchpad-wifi/01-Join-Network.png" style="width: 444px; height: auto; max-width: 100%;"/&gt;
&lt;p class="caption"&gt;When you have the WiFi network selection open, tap on the “+ Join Network”.  The image was captured before the Touchpad located any WiFi networks.  Normally, you will see your network and possibly others above the “+ Join Network” option.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure" style="width: 443px; height: auto; max-width: 100%;"&gt;
&lt;img alt="" src="/images/posts/hp-touchpad-wifi/02-Join-Network-Open.png" style="width: 443px; height: auto; max-width: 100%;"/&gt;
&lt;p class="caption"&gt;This will open a dialog that is normally used for you to enter the &lt;span class="caps"&gt;SSID&lt;/span&gt; of a hidden WiFi network.  Instead, we are typing our WiFi passcode in plain text (oh, glorious plain text).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure" style="width: 443px; height: auto; max-width: 100%;"&gt;
&lt;img alt="" src="/images/posts/hp-touchpad-wifi/03-Type-and-Select-All.png" style="width: 443px; height: auto; max-width: 100%;"/&gt;
&lt;p class="caption"&gt;You can now see all characters and scroll back and forth to verify everything is correct (just tap and drag to the left or right.)  When it looks good, tap and hold to bring up the Select menu.  Choose Select All.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure" style="width: 443px; height: auto; max-width: 100%;"&gt;
&lt;img alt="" src="/images/posts/hp-touchpad-wifi/05-Hold-for-Copy.png" style="width: 443px; height: auto; max-width: 100%;"/&gt;
&lt;p class="caption"&gt;Now with everything selected, tap and hold again for the Copy menu.  Select Copy and you have your WiFi key in your clipboard.  Tap cancel and select your WiFi network.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure" style="width: 443px; height: auto; max-width: 100%;"&gt;
&lt;img alt="" src="/images/posts/hp-touchpad-wifi/06-Hold-for-Paste.png" style="width: 443px; height: auto; max-width: 100%;"/&gt;
&lt;p class="caption"&gt;Tap and hold in the passcode field and you can select Paste.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="touchpad"></category><category term="wifi"></category><category term="setup"></category></entry><entry><title>HP Touchpad</title><link href="http://www.joesacher.com/blog/tech/hp-touchpad/" rel="alternate"></link><updated>2011-07-01T00:00:00-04:00</updated><author><name>Joe Sacher</name></author><id>tag:www.joesacher.com,2011-07-01:blog/tech/hp-touchpad/</id><summary type="html">&lt;p&gt;July 1st is the day that many WebOS users have been waiting for.  The day that &lt;span class="caps"&gt;HP&lt;/span&gt; releases their first WebOS tablet, the Touchpad.  I preordered through Amazon and was delivered my own spanking new &lt;span class="caps"&gt;HP&lt;/span&gt; Touchpad tablet this evening.&lt;/p&gt;
&lt;p&gt;Overall it is an amazing piece of technology. Slicker than any Android tablets that I have tried, but not quite as polished as an iPad. However, for me the usability if far above an iPad, whose “multitasking” is a joke compared to the Touchpad.&lt;/p&gt;
&lt;p&gt;I”ve been typing this in the Wordpress app on the Touchpad.  Now to see how to post it.&lt;/p&gt;
</summary><category term="webOS"></category><category term="touchpad"></category></entry><entry><title>Enhancing the AVR ISP II</title><link href="http://www.joesacher.com/blog/tech/enhancing-the-avr-isp-ii/" rel="alternate"></link><updated>2011-05-23T00:00:00-04:00</updated><author><name>Joe Sacher</name></author><id>tag:www.joesacher.com,2011-05-23:blog/tech/enhancing-the-avr-isp-ii/</id><summary type="html">&lt;p&gt;The &lt;span class="caps"&gt;AVR&lt;/span&gt; &lt;span class="caps"&gt;ISP&lt;/span&gt; &lt;span class="caps"&gt;II&lt;/span&gt; is a device to program an &lt;span class="caps"&gt;AVR&lt;/span&gt; microcontroller using a 6 pin header in a circuit.  It does not contain any capability to power the circuit being programmed.  This could be very handy.&lt;/p&gt;
&lt;p&gt;Dave Jones at the &lt;a class="reference external" href="http://eevblog.com"&gt;EEVBlog&lt;/a&gt; has a &lt;a class="reference external" href="http://www.eevblog.com/2011/03/25/eevblog-158-avr-isp-mk2-lm317-regulator-tutorial"&gt;video about adding power to the &lt;span class="caps"&gt;ISP&lt;/span&gt; cable, using an &lt;span class="caps"&gt;LM317&lt;/span&gt;&lt;/a&gt; to provide both 5V and 3.3V.  The issue with this, as he stated, was that the 5V source was very close to the required dropout voltage of the regulator to get the 3.3V.  In addition, resistors are needed to set the voltage.  This is my version of hacking on the &lt;span class="caps"&gt;AVR&lt;/span&gt; &lt;span class="caps"&gt;ISP&lt;/span&gt; &lt;span class="caps"&gt;II&lt;/span&gt;.&lt;/p&gt;
&lt;div class="figure" style="width: 450px; height: auto; max-width: 100%;"&gt;
&lt;img alt="" src="/images/posts/enhancing-the-avr-isp-ii/Regulator.jpg" style="width: 450px; height: auto; max-width: 100%;"/&gt;
&lt;p class="caption"&gt;3.3V &lt;span class="caps"&gt;LDO&lt;/span&gt; Regulator soldered to &lt;span class="caps"&gt;USB&lt;/span&gt; jack&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I decided to use a Low Drop Out regulator for 3.3V.  The specific part I used was the &lt;a class="reference external" href="http://www.rohm.com/products/databook/power/pdf/bdxxka5-e.pdf"&gt;&lt;span class="caps"&gt;BD33KA5&lt;/span&gt; in a &lt;span class="caps"&gt;TO252&lt;/span&gt;-3 package (pdf)&lt;/a&gt;.  I started by soldering the tab of the &lt;span class="caps"&gt;LDO&lt;/span&gt; 3.3V regulator to the shield ground on the &lt;span class="caps"&gt;USB&lt;/span&gt; jack.  My new $50 Atten 858D+ hot air rework station made this much easier than an iron.  I had tried and failed with the iron before the 858D+ arrived.  According to the data sheet, I needed a 1uF on both Vcc and 3.3V output pins.  I used some tantalums that I had around.&lt;/p&gt;
&lt;div class="figure align-right" style="width: 450px; height: auto; max-width: 100%;"&gt;
&lt;img alt="" src="/images/posts/enhancing-the-avr-isp-ii/Vcc.jpg" style="width: 450px; height: auto; max-width: 100%;"/&gt;
&lt;p class="caption"&gt;Connection from the 5V pin of the &lt;span class="caps"&gt;USB&lt;/span&gt; to the 3.3V voltage regulator&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I soldered the Vcc side of the regulator directly to the &lt;span class="caps"&gt;USB&lt;/span&gt; 5V pin and also soldered a 5V wire from the regulator back to the switch.&lt;/p&gt;
&lt;p&gt;I decided that I would use a &lt;span class="caps"&gt;DPDT&lt;/span&gt; &lt;span class="caps"&gt;ON&lt;/span&gt;-&lt;span class="caps"&gt;OFF&lt;/span&gt;-&lt;span class="caps"&gt;ON&lt;/span&gt; switch to allow for 5V - 0V - 3.3V output options.  I used a double pole, instead of a single pole, so I could use the other pole of the switch to power little LEDs beside the 5V and 3.3V labels.  This will give an indication to make it harder to accidentally power into a live circuit.  I decided to mess with surface mount LEDs.  This would turn out to be a mistake.&lt;/p&gt;
&lt;div class="figure" style="width: 450px; height: auto; max-width: 100%;"&gt;
&lt;img alt="" src="/images/posts/enhancing-the-avr-isp-ii/SMDTest.jpg" style="width: 450px; height: auto; max-width: 100%;"/&gt;
&lt;p class="caption"&gt;Powering both the &lt;span class="caps"&gt;SMD&lt;/span&gt; &lt;span class="caps"&gt;LED&lt;/span&gt; indicators&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure" style="width: 450px; height: auto; max-width: 100%;"&gt;
&lt;img alt="" src="/images/posts/enhancing-the-avr-isp-ii/Snapped2.jpg" style="width: 450px; height: auto; max-width: 100%;"/&gt;
&lt;p class="caption"&gt;&lt;span class="caps"&gt;SMD&lt;/span&gt; LEDs were too delecate for me&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;When I got the &lt;a class="reference external" href="http://search.digikey.com/scripts/DkSearch/dksus.dll?Detail&amp;amp;name=475-1408-1-ND"&gt;LEDs from DigiKey&lt;/a&gt;, they were tiny.  Like, stick to your soldering iron when trying to solder tiny.  Like, Joe you are going to snap them in half a couple times.  I soldered the &lt;span class="caps"&gt;LED&lt;/span&gt; to a 1/4W resistor and a wire.  This allowed me to test the power.  For 2mA, these were pretty decent.  I snapped one &lt;span class="caps"&gt;LED&lt;/span&gt; during this, but resoldered on another one.&lt;/p&gt;
&lt;p&gt;After messing around with soldering those to the switch and trying to bend the resistors into place, I snapped both of them.  I think it might have been possible with thin wire and would have looked good.  But I was done with this &lt;span class="caps"&gt;SMD&lt;/span&gt; stuff for now. :)&lt;/p&gt;
&lt;div class="figure align-right" style="width: 450px; height: auto; max-width: 100%;"&gt;
&lt;img alt="" src="/images/posts/enhancing-the-avr-isp-ii/BetterLEDs.jpg" style="width: 450px; height: auto; max-width: 100%;"/&gt;
&lt;p class="caption"&gt;Change to 3mm LEDs&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I grabbed some 3mm red LEDs that I have had since I was in middle school.  These let me also fix the one problem I didn’t think about.  My &lt;span class="caps"&gt;SMD&lt;/span&gt; LEDs were crossed, so the light would be illuminated the opposite direction of the switch toggle.  I crossed the hookup for the 3mm LEDs.  I had to change the current limiting resistors from 1.5k to 220.  I figured about 16 mA for these LEDs and it turned out about right.  (I am running the LEDs directly from the 5V power.)&lt;/p&gt;
&lt;p&gt;With 5V and 3.3V soldered to each side of one pole, I wired the center down to pin 2 of the &lt;span class="caps"&gt;ISP&lt;/span&gt; header.  Now we can power it with 5V, 3.3V or Nothing.&lt;/p&gt;
&lt;div class="figure align-right" style="width: 450px; height: auto; max-width: 100%;"&gt;
&lt;img alt="" src="/images/posts/enhancing-the-avr-isp-ii/Pin2.jpg" style="width: 450px; height: auto; max-width: 100%;"/&gt;
&lt;p class="caption"&gt;&lt;span class="caps"&gt;ISP&lt;/span&gt; Power connection on Pin 2&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I connected the &lt;span class="caps"&gt;AVR&lt;/span&gt; &lt;span class="caps"&gt;ISP&lt;/span&gt; &lt;span class="caps"&gt;II&lt;/span&gt; to the &lt;span class="caps"&gt;ISP&lt;/span&gt; connector on an Arduino Uno board.  With no power, the &lt;span class="caps"&gt;ISP&lt;/span&gt; should work as normal, if you power the Uno board.&lt;/p&gt;
&lt;div class="figure" style="width: 450px; height: auto; max-width: 100%;"&gt;
&lt;img alt="" src="/images/posts/enhancing-the-avr-isp-ii/PowerOff.jpg" style="width: 450px; height: auto; max-width: 100%;"/&gt;
&lt;p class="caption"&gt;Connected to Uno but with power off&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I then tried the 5V power to the Uno board and that looked good.&lt;/p&gt;
&lt;div class="figure" style="width: 450px; height: auto; max-width: 100%;"&gt;
&lt;img alt="" src="/images/posts/enhancing-the-avr-isp-ii/On5V.jpg" style="width: 450px; height: auto; max-width: 100%;"/&gt;
&lt;p class="caption"&gt;Powering the &lt;span class="caps"&gt;UNO&lt;/span&gt; with 5V &lt;span class="caps"&gt;ISP&lt;/span&gt; connection&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Finally I thought the Uno might run on 3.3V, even though I don’t think you are supposed to use up to 16 MHz with 3.3V.  I didn’t try programming, but the power definitely works.&lt;/p&gt;
&lt;div class="figure" style="width: 450px; height: auto; max-width: 100%;"&gt;
&lt;img alt="" src="/images/posts/enhancing-the-avr-isp-ii/On33V.jpg" style="width: 450px; height: auto; max-width: 100%;"/&gt;
&lt;p class="caption"&gt;Powering the Uno with 3.3V &lt;span class="caps"&gt;ISP&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I’m not terribly pleased with the results of hot gluing the LEDs.  It spreads the light too much.  If I was to do it again, I wouldn’t try to cover around the &lt;span class="caps"&gt;LED&lt;/span&gt;, I would have put a dab of hot glue and stuck the &lt;span class="caps"&gt;LED&lt;/span&gt; into the glue.  I did find out that the 858D+ rework air iron was again helpful to fix my glue mess.  By setting the temperature down to the minimum of 100 C, I was able to remelt the glue and push the LEDs in deeper with a flat screw driver, without hurting the plastic case at all.&lt;/p&gt;
&lt;p&gt;Anyhow, it is a test device, so it doesn’t have to look good.  It just has to work.  Work it does.&lt;/p&gt;
</summary><category term="electronics"></category><category term="avr"></category><category term="hacking"></category></entry><entry><title>TouchStone Theories Confirmed</title><link href="http://www.joesacher.com/blog/tech/touchstone-theories-confirmed/" rel="alternate"></link><updated>2011-02-22T00:00:00-05:00</updated><author><name>Joe Sacher</name></author><id>tag:www.joesacher.com,2011-02-22:blog/tech/touchstone-theories-confirmed/</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.precentral.net/"&gt;Precentral.net&lt;/a&gt; read through the initial &lt;a class="reference external" href="http://www.joesacher.com/blog/tech/webos-touchstone-now-and-future/"&gt;TouchStone theory post&lt;/a&gt; I put up and asked &lt;span class="caps"&gt;HP&lt;/span&gt; about my theories.
As they posted &lt;a class="reference external" href="http://www.precentral.net/touchstone-v2-has-identity-not-nfc"&gt;in this article on the site&lt;/a&gt;, &lt;span class="caps"&gt;HP&lt;/span&gt; confirmed the identification to work as I assumed.&lt;/p&gt;
&lt;p&gt;The new TouchStones will use the 3.1 MHz frequency to pass a unique key to the new WebOS phones, which will enable them to know where it is docked.  You will obviously have to tell the phone where each dock is located the first time you use it.  Derek did a great job translating my geek speak into general WebOS fan digestible content.&lt;/p&gt;
&lt;p&gt;Only a few errors with the wording in the document.  He refers to a coil for each frequency.  I believe that both frequencies will use the same coil.  It is resonant on both the communication frequency (3.1 MHz) and the charging frequency (118.5 KHz), so there is no reason to add extra hardware to the mix.  This isn’t really important to the end user, but just trying to be technically correct.&lt;/p&gt;
&lt;p&gt;Some have speculated that this 3.1 MHz frequency will allow the TouchStone to have a data &lt;span class="caps"&gt;USB&lt;/span&gt; cable.  I don’t think this is possible.  The data rate on a 3.1 MHz carrier is very low.  The best that could be emulated is a old style serial connection (think phone line modem speeds).  Nothing even close to the speed of even &lt;span class="caps"&gt;USB&lt;/span&gt; 1.0.  It will most likely only be a method of establishing the connection via Bluetooth for major data transfer or for a stereo audio out functionality.  Otherwise, it will just be used to exchange fairly short messages, like the &lt;span class="caps"&gt;URL&lt;/span&gt; example shown during the Feb. 9th event.&lt;/p&gt;
</summary><category term="webOS"></category><category term="touchstone"></category></entry><entry><title>WebOS Touchstone - Now and Future</title><link href="http://www.joesacher.com/blog/tech/webos-touchstone-now-and-future/" rel="alternate"></link><updated>2011-02-15T00:00:00-05:00</updated><author><name>Joe Sacher</name></author><id>tag:www.joesacher.com,2011-02-15:blog/tech/webos-touchstone-now-and-future/</id><summary type="html">&lt;div class="figure" style="width: 115px; height: auto; max-width: 100%;"&gt;
&lt;img alt="" src="/images/posts/webos-touchstone-now-and-future/touchstone.jpg" style="width: 115px; height: auto; max-width: 100%;"/&gt;
&lt;/div&gt;
&lt;p&gt;When the Palm Pre was released, Palm also sold a unique inductive charger called the Touchstone.  Inductive charging isn’t new, by any means.  Electric toothbrushes and many other devices have used them in the past.  This was a first for cell phones, I believe.&lt;/p&gt;
&lt;p&gt;When I purchased my Pre and eventually many Touchstones, I didn’t have a good oscilloscope to play around with the signals.  Now I do.  With the announcement of &lt;span class="caps"&gt;HP&lt;/span&gt;’s new phones and an expansion of the TouchStone coil functionality in the phone, I thought I would take a look.&lt;/p&gt;
&lt;p&gt;I guess I should start will a little explanation of Touchstone charging.  The charger is a base with a coil embedded in it.  The phone also has a coil embedded into the back.  In addition, both have magnets to align the phone and base coils together.  You slide the phone onto the Touchstone and the magnets pull it to the correct spot for alignment.&lt;/p&gt;
&lt;p&gt;A transformer is a set of two coils, used to transfer &lt;span class="caps"&gt;AC&lt;/span&gt; signals from one side to the other.  They are most commonly used to reduce household voltages for use by devices (after rectification of the &lt;span class="caps"&gt;AC&lt;/span&gt; signal into &lt;span class="caps"&gt;DC&lt;/span&gt;).  The transformer is the largest component in the big “wall wart plug” power supplies, supplied with so many electronic devices.&lt;/p&gt;
&lt;p&gt;Transformers are also used for isolation.  Since only a changing magnetic field can induce a current in a wire, &lt;span class="caps"&gt;DC&lt;/span&gt; cannot be passed through a transformer.  This is useful when a circuit had a &lt;span class="caps"&gt;DC&lt;/span&gt; bias, along with an &lt;span class="caps"&gt;AC&lt;/span&gt; signal, and you only want the &lt;span class="caps"&gt;AC&lt;/span&gt; signal.  On a computer modem, you usually see a transformer used to interface with the phone line and isolate the delicate circuitry from a line that can have fairly high voltage on it.  So they can be used for signals, not just power.&lt;/p&gt;
&lt;p&gt;The side of the transformer that provides the power is called the primary, the coil in the Touchstone in this case.  The receiving coil of the transformer is the secondary, the WebOS phone’s back.  Since the Touchstone is powered by 5V 1A &lt;span class="caps"&gt;USB&lt;/span&gt; plug, it has its own oscillator to make a varying signal to drive the coil.  But what does this signal look like?&lt;/p&gt;
&lt;p&gt;I used a simple two coil wire antenna around the base of my Touchstone, where it meets the Pre.  This is acting as another secondary for the transformer.  The voltage induced into the coil is proportional to the number of turns, so my coil has a very low voltage.  However, the scope has enough sensitivity to sample the frequency and waveform characteristics of this small signal.&lt;/p&gt;
&lt;div class="figure align-right" style="width: 320px; height: auto; max-width: 100%;"&gt;
&lt;img alt="" src="/images/posts/webos-touchstone-now-and-future/touchstone-scope.png" style="width: 320px; height: auto; max-width: 100%;"/&gt;
&lt;p class="caption"&gt;Screen capture of my scope displaying the waveform.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Displayed on the upper right is the waveform frequency, which varied between 121-123 KHz.  This is a higher frequency than I expected, as I remember that losses go up in transformers with frequency.  I am not a radio frequency engineer, so I am sure they figured out that this frequency is best (and/or was a location on the &lt;span class="caps"&gt;RF&lt;/span&gt; band for which they could get permission from the &lt;span class="caps"&gt;FCC&lt;/span&gt; to operate.) Without having iron cores of typical power transformers, it must be more efficient to transfer power at these higher frequencies.&lt;/p&gt;
&lt;p&gt;The reason I started looking at this were the frequencies from the &lt;span class="caps"&gt;FCC&lt;/span&gt; report, tweeted about by &lt;a class="reference external" href="http://twitter.com/webosinternals"&gt;@WebOSInternals&lt;/a&gt;.  The &lt;span class="caps"&gt;HP&lt;/span&gt; Veer’s Touchstone back has a receive frequency of 118.5 KHz and a transmit frequency of 3.1 MHz.&lt;/p&gt;
&lt;p&gt;I thought neither of these would be charging frequencies, as they both seem fairly high.  I was wrong.  With the analysis of the original Touchstone, it is obvious that the 118.5 KHz is the charging frequency of the new Touchstones.  This is close enough in frequency that old WebOS phones will charge on new Touchstones and new WebOS phones will charge on old Touchstones.  (&lt;span class="caps"&gt;HP&lt;/span&gt;’s presentation on the 9th actually showed a new device on an old Palm branded Touchstone.)&lt;/p&gt;
&lt;p&gt;In radio antennas, there is a property call resonance.  This is where the antenna is tuned such that the maximum amount of power is transferred to the antenna.  Otherwise, energy is just lost in the circuitry before the antenna and the transmission power is lower than it could have been.  Antennas resonate at multiples of a given frequency.  So a coil antenna that is tuned to resonate at 118.5 KHz would also resonate at 26 times that frequency or 3.08 MHz.  Now we know why these specific two frequencies were selected and why the Touchstone charging frequency has changed slightly.&lt;/p&gt;
&lt;p&gt;What is unknown is if new Touchstones will use the 3.1 MHz to communicate with the new devices.  It would be a method of identifying exactly which Touchstone you are on if they told the phone a unique &lt;span class="caps"&gt;ID&lt;/span&gt;.  This would be a great way for the phone to have different functionality at different locations, in the new exhibition mode.  What is known is that new devices communicate with each other via the 3.1 MHz frequency over each device’s Touchstone charging coil.&lt;/p&gt;
&lt;p&gt;I can’t wait to put a new device and Touchstone on the scope and see what the data looks like.&lt;/p&gt;
</summary><category term="webOS"></category><category term="touchstone"></category></entry><entry><title>Amateur Extra Class - No More Tests</title><link href="http://www.joesacher.com/blog/tech/amateur-extra-class-no-more-tests/" rel="alternate"></link><updated>2011-02-09T00:00:00-05:00</updated><author><name>Joe Sacher</name></author><id>tag:www.joesacher.com,2011-02-09:blog/tech/amateur-extra-class-no-more-tests/</id><summary type="html">&lt;p&gt;I studied for a month or so and re-learned quite a bit of electronics for &lt;span class="caps"&gt;AC&lt;/span&gt; circuits.  Resistance, Reactance, Polar Impedance.  I took the test on the morning of February 5th and missed 1 out of 50.  So now I am an Extra Class Licensed Ham Radio operator.  No more tests to take.  This is as high as it gets.&lt;/p&gt;
&lt;p&gt;I am still working on what type of antenna to put up.  I will probably do an 80 meter dipole that I can tune to higher frequencies.  I have built an 80m &lt;span class="caps"&gt;SSB&lt;/span&gt; Voice Transceiver and a 40m &lt;span class="caps"&gt;CW&lt;/span&gt; Morse Code radio.  I don’t have any wire in the air to hook them up to, however.  It will be cool to hear my first transmissions on radios I built.&lt;/p&gt;
</summary><category term="HAM radio"></category><category term="electronics"></category></entry><entry><title>Bencoding (encoding of a .torrent file)</title><link href="http://www.joesacher.com/blog/tech/bencoding/" rel="alternate"></link><updated>2010-12-21T00:00:00-05:00</updated><author><name>Joe Sacher</name></author><id>tag:www.joesacher.com,2010-12-21:blog/tech/bencoding/</id><summary type="html">&lt;p&gt;The Bencode format is an interesting design.  It is byte based, which makes it safe from big-endian and little-endian translations.  Somewhere when reading about how torrents worked, I got looking at their file format.
As far as I know, the Bencode format isn’t used on anything but torrent files.  The format is pretty simple, with only 4 different data structures: Byte String, Integer, List, and Dictionary.&lt;/p&gt;
&lt;div class="section" id="bencode-basics"&gt;
&lt;h2&gt;Bencode Basics&lt;/h2&gt;
&lt;div class="section" id="byte-string"&gt;
&lt;h3&gt;Byte String&lt;/h3&gt;
&lt;p&gt;This is formatted as [integer length]:[byte string].  Simply read the length number of bytes following the colon.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="integer"&gt;
&lt;h3&gt;Integer&lt;/h3&gt;
&lt;p&gt;The integer type is structured as i[contents]e. Contents can be positive or negative integer, without leading zeros.&lt;/p&gt;
&lt;p&gt;Valid examples: i-1234e i1234e&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="list"&gt;
&lt;h3&gt;List&lt;/h3&gt;
&lt;p&gt;The list type (or array if you like) is formatted as l[contents]e.  Contents will be any valid Bencode types just appended together.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="dictionary"&gt;
&lt;h3&gt;Dictionary&lt;/h3&gt;
&lt;p&gt;The dictionary type (also know as a hash or an associative array) is formatted as d[contents]e.  Contents includes [key][value] pairs until termination.  The key value must always be a byte string, but the value may be any Bencode type (even another dictionary).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="the-code"&gt;
&lt;h2&gt;The Code&lt;/h2&gt;
&lt;p&gt;It is possible to store complex structures with these simple types.  I enjoyed learning the format by creating a Python class for encoding and decoding data in Bencode format.
The source code for this class is available &lt;a class="reference external" href="https://github.com/sacherjj/bencode"&gt;on my github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I have been using Python for quite a while as a scripting language, but only recently started trying to create proper classes and develop more advanced &lt;span class="caps"&gt;OO&lt;/span&gt; designed applications with Python.  I’m sure this isn’t purely Pythonic and would welcome any criticism and ways to improve.
I wanted to call out a few things in the code that were good learning experiences for me.&lt;/p&gt;
&lt;div class="section" id="encoding-methods"&gt;
&lt;h3&gt;Encoding Methods&lt;/h3&gt;
&lt;p&gt;Functions are objects in Python and can be stored and referenced just like data.  In the internal encoding function _local_encode, I’m storing the various data type encode methods in a
dictonary with data type string as key.  This allows me to get data type string with &lt;code&gt;type(data).__name__&lt;/code&gt;.  If the key exists in the dictonary, I envoke that method to process the data.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_local_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;""" Returns the proper Bencoded string for data given """&lt;/span&gt;
    &lt;span class="n"&gt;encoders&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'dict'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_encode_dictionary&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;'list'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_encode_list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;'tuple'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_encode_list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;'str'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_encode_string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;'int'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_encode_integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;'float'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_encode_float&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;data_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;data_type&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;encoders&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;encoders&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;data_type&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Encoder is not defined for data type: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;data_type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;String encoding is very simple, just joining length of the string with the data.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nd"&gt;@staticmethod&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_encode_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;""" Converts string to Bencoded Byte String """&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;:&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Encoding integer is just wrapping ‘i’ and ‘e’ around the string conversion of the integer.  Since bencode does not encode floats, those are converted to ints.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nd"&gt;@staticmethod&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_encode_integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;""" Converts Integer to Bencoded Integer string """&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;'i&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;e'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_encode_float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;""" Converts Float to Bencoded Integer string """&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_encode_integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;List encoding performs recursive calls into _local_encode as it loops through the list, just appending items.  I optimised with lists instead of string concatenation.  Originally, I built this with the ben variable as a string and += calls, which is terrible for memory performance.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_encode_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;""" Converts List or Tuple to Bencoded List string """&lt;/span&gt;
    &lt;span class="n"&gt;ben&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'l'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;ben&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_local_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;ben&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'e'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ben&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Dictionary works the same way as list, just appending the generated values from _local_encode with the addition of a string in front.  Again, this was changed from string concatenation to list append.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_encode_dictionary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;""" Converts Dictionary to Bencoded Dictionary String """&lt;/span&gt;
    &lt;span class="n"&gt;ben&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'d'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;()):&lt;/span&gt;
        &lt;span class="n"&gt;ben&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_encode_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;ben&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_local_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
    &lt;span class="n"&gt;ben&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'e'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ben&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This came out simpler and cleaner than I expected for encoding.  But it is a really simple format, so it shouldn’t be too complex.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="decoding-methods"&gt;
&lt;h3&gt;Decoding Methods&lt;/h3&gt;
&lt;p&gt;For my external decode method, I’m using a class level pointer for the bencoded string and walking through it.  I setup those two variables and call into _local_decode.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ben_string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;""" Returns the data structure defined by the Bencoded string """&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_ben_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ben_string&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_pointer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_local_decode&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;IndexError&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Index Error at Pointer = &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt; of &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_pointer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_ben_string&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While I thought I might use the dictonary mapped methods again, I couldn’t find a clean way to handle the 11 possible cases for integer.  So, I decided to just just go old school flow control.  This is one situation that I would have used a switch statement with an else case if it was available in Python.  If you have a more Pythonic way of doing this, please ley me know!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_local_decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;""" Detects and returns the proper Bencoded data type starting at current Pointer position """&lt;/span&gt;
    &lt;span class="n"&gt;cur_char&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_ben_string&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_pointer&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;cur_char&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'i'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_parse_integer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;cur_char&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'l'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_parse_list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;cur_char&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'d'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_parse_dictionary&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;cur_char&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'0'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'5'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'6'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'7'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'8'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'9'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_parse_byte_string&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Invalid character detected at position &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt; : &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_pointer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cur_char&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before we get into Integer and String decoding, we have a helper function.  Both the Integer and the String will have a certain number of characters to parse into an integer.
The only difference is the stop character.  For the String, this is the length of the string with ‘:’ end character.  For the Integer, this is the actual data value with ‘e’ end character.
You will see this method called from both decode methods.  Note that the int() parsing handles the leading ‘-‘ fine for negative integers.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_get_number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end_char&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;    Returns number in string up to termination character given.&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;

    &lt;span class="n"&gt;start_pointer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_pointer&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_ben_string&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_pointer&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;end_char&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_pointer&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_ben_string&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start_pointer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_pointer&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;  &lt;span class="c"&gt;# Parse int&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_pointer&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="c"&gt;# Consume the end_char&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The only job of the integer decode method is to consume the leading character that doesn’t exist in the string integer.  Then all the work is turned over to the _get_number method above up to the ‘e’ character.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_parse_integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;    Parses a Bencoded Integer type of format i&amp;lt;number&amp;gt;e&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_pointer&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="c"&gt;# Consume the 'i' start character&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_get_number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'e'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The String decoding gets the length integer this the helper function up to the ‘:’ character.  Then it gets the string for return, and increments the pointer past the string.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_parse_byte_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;    Parses a Bencoded Byte String type of format &amp;lt;len&amp;gt;:&amp;lt;byte string&amp;gt;&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;

    &lt;span class="n"&gt;str_len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_get_number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;':'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;byte_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_ben_string&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_pointer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_pointer&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;str_len&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_pointer&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;str_len&lt;/span&gt;  &lt;span class="c"&gt;# Consume the byte string&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;byte_string&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The list starts with ‘l’ and ends with ‘e’.  So we move the pointer to consume the ‘l’, then we loop until the current pointer character is an ‘e’.  Each time through the while,
the class level pointer might increment quite a bit, as data items are consumed.  However, we are not at the end of the list until we see a letter ‘e’.&lt;/p&gt;
&lt;p&gt;For each list item, much like the recursive encoding, we call _local_decode to return us whatever the data is.&lt;/p&gt;
&lt;p&gt;Since it is the responsibility of all the decoding methods to consume their bytes, we increment the pointer to move past the list termination ‘e’ at the end.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_parse_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;    Parses a Bencoded List type of format l&amp;lt;contents&amp;gt;e&lt;/span&gt;

&lt;span class="sd"&gt;    All members of the list as simply appended together in Bencode format to make up &amp;lt;contents&amp;gt;&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_pointer&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="c"&gt;# Consume the 'l' start character&lt;/span&gt;
    &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_ben_string&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_pointer&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;'e'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_local_decode&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_pointer&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c"&gt;# Consume the 'e' termination character&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is very similar to list processing, with the addition of the key.  We know that the key is required to be a byte string, so we call directly to that method.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_parse_dictionary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""    Parses a Bencoded Dictionary type of format d&amp;lt;pairs&amp;gt;e&lt;/span&gt;

&lt;span class="sd"&gt;    All pairs consist of ByteString key followed by any valid data type&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_pointer&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="c"&gt;# Consume the 'd' start character&lt;/span&gt;
    &lt;span class="n"&gt;be_dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_ben_string&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_pointer&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;'e'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_parse_byte_string&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;   &lt;span class="c"&gt;# Skipping local decode, because key must be a byte string&lt;/span&gt;
        &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_local_decode&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;be_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_pointer&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="c"&gt;# Consume the 'e' termination character&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;be_dict&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have a cleaner implementation you would like to share, please contact me.  I found the few iterations on this to be enjoyable and a good learning experience.&lt;/p&gt;
&lt;p&gt;The code is licensed under a &lt;a class="reference external" href="http://creativecommons.org/licenses/by-nc-sa/3.0/"&gt;Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="python"></category></entry><entry><title>I’m such a HAM…</title><link href="http://www.joesacher.com/blog/tech/im-such-a-ham/" rel="alternate"></link><updated>2010-12-18T00:00:00-05:00</updated><author><name>Joe Sacher</name></author><id>tag:www.joesacher.com,2010-12-18:blog/tech/im-such-a-ham/</id><summary type="html">&lt;p&gt;Years ago, Dad and I attended meetings for Amateur Radio at the local Red Cross building in Jeffersonville.  We both worked through passing the 5 words per minute Morse Code and test to get our Novice license and then studied and passed the test for Technician Class.  I was licensed in 1990 and expired in 2000.  Just when I was starting work in the “Real World”, outside of college.  I didn’t bother renewing.&lt;/p&gt;
&lt;p&gt;A thread on a board I frequent about members who were HAMs (a nickname for Amateur Radio Operators) made me think it might be fun to get my license again.  A test was being given in Franklin on the 18th
(after the monthly meeting of the &lt;a class="reference external" href="http://blog.midstatehams.org/index.html"&gt;Mid-State Amateur Radio Club&lt;/a&gt;).  I decided to go for it.&lt;/p&gt;
&lt;p&gt;The classes used to be Novice, Technician, General, Advanced, and Extra.  And they required Morse Code (&lt;span class="caps"&gt;CW&lt;/span&gt;).  Now the classes have been simplified to Technician, General and Extra.  Code is no longer needed for any of the classes.&lt;/p&gt;
&lt;p&gt;I didn’t have too much time to study, but I went anyway.  A large portion is electronics, so I hoped the Electrical Engineering degree would we worth something for that.&lt;/p&gt;
&lt;p&gt;I felt like I knew every answer.  And it turned out that I did.  100%.  Then they mentioned that you can take the next level test for free, because you had already paid the $15 exam fee for the day.  Why not?&lt;/p&gt;
&lt;p&gt;The General Class exam was also 35 questions and I didn’t get all of them correct.  But I did get enough to pass.  Surprise.  “Do you want to take the Extra Class exam?” they asked.&lt;/p&gt;
&lt;p&gt;Well, why not?&lt;/p&gt;
&lt;p&gt;The Extra had 50 questions and asked about many regulations of which I had no clue.  I also tried to pull the knowledge of reactive power and polar coordinate description of complex power out of my mind’s archives.  I missed 19.  You had to miss only 13 to pass.  I didn’t think it was going to be that close.  It really would have been crazy to get through all the possible exams in one day, without studying much.&lt;/p&gt;
&lt;p&gt;By the end of the week, I should be in the &lt;span class="caps"&gt;FCC&lt;/span&gt; database as a General Class Licensee.  Now I feel like I should go ahead and take the Extra Class test with some studying.  Why not do it before I really learn my new call sign?  Then I don’t have to worry about it every changing again.&lt;/p&gt;
&lt;p&gt;I wonder when the next test is going to be…&lt;/p&gt;
</summary><category term="HAM radio"></category><category term="electronics"></category></entry></feed>